import concurrent.Future
import concurrent.ExecutionContext.Implicits.global

object HTTPAPI:
  private def makeRequest(Request): Future[Response]

  def get(uri: String, headers: Seq[String] = Seq()):Future[Response] =
    makeRequest(Request(GET, uri, headers, None))

  def post(uri: String, headers: Seq[String] = Seq(),
           body: String): Future[Response] =
    makeRequest(Request(POST, uri, headers, Some(body)))

  def put(uri: String, headers: Seq[String] = Seq(),
          body: String): Future[Response] =
    makeRequest(Request(PUT, uri, headers, Some(body)))

// @main
def libuvApi(args: String*): Unit =
  // val getRequest = get(some_uri)
  val getRequest = get("")
  getRequest.onComplete { response =>
    println(s"got back response code ${response.code}")
    println(s"response body: ${response.body}")
  }
