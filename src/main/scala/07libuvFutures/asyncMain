// import scalanative.native.*
import scalanative.unsafe.*
import util.{Success, Failure}

// @main
def asyncMain(args: Array[String]): Unit =
  if args.length == 0 then
    println("usage: ./curl-out https://whatever.url/you/want?to=fetch")
    ???

  println("initializing loop")
  implicit val loop = EventLoop
  val resp = Zone { implicit z =>
    for arg <- args do
      val url = toCString(arg)
      val resp = Curl.get(url)

      resp.onComplete {
        case Success(body) =>
          println(
            s"got back response for ${arg} - body of length ${body.size}"
          )
          println(body.substring(0, 80))
          println("...")
          println(body.substring(body.size - 80))
        case Failure(f) => println("request failed", f)
      }

  }

  loop.run()
  println("loop done, cleaning up")
  Curl.cleanup()
  println("done")
